% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply-relative-theshold.R
\name{apply_relative_threshold}
\alias{apply_relative_threshold}
\title{Identify urban boundaries by applying an relative threshold}
\usage{
apply_relative_threshold(
  grid,
  fun,
  ...,
  zones = NULL,
  operator = "greater_than",
  smoothing = TRUE
)
}
\arguments{
\item{grid}{SpatRaster}

\item{fun}{character / function. Function applied to derive a threshold value for each zone. Either as character: 'min', 'max', 'mean', 'median', or 'pX' where X is a percentile value (e.g., p25 for the 25\% percentile value"), or for relatively small grids a custom function.}

\item{...}{additional arguments passed to fun}

\item{zones}{character / SpatRaster / sf object with the zones for which a separate threshold value will be derived.}

\item{operator}{character. Operator used to enforce the threshold. Either 'greater_than', 'greater_or_equal', 'smaller_than', 'smaller_or_equal' or 'equals'.}

\item{smoothing}{logical. Whether to smooth the edges of the boundaries. If \code{TRUE}, the the function \code{apply_majority_rule} will be employed.}
}
\value{
named list with the following elements:
\itemize{
\item \code{rboundaries}: SpatRaster in which cells that are part of an urban unit have a value of '1'
\item \code{vboundaries}: sf object with the urban units as polygons
\item \code{threshold}: dataframe with per zone the threshold value that is applied
}
}
\description{
TODO
}
\examples{
proxies <- load_proxies_belgium()

# use the 95 percentile value of the population as threshold
pop_above_p95 <- apply_relative_threshold(proxies$pop, 'p95')
terra::plot(pop_above_p95$rboundaries)

# use the 95 percentile value per province as threshold
province_zones <- convert_zones_to_grid(flexurba::units_belgium, proxies$pop, 'GID_2')
pop_above_p95_per_prov <- apply_relative_threshold(proxies$pop, 'p95', zones=province_zones)
terra::plot(pop_above_p95_per_prov$rboundaries)
}
