% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply-absolute-threshold.R
\name{apply_absolute_threshold}
\alias{apply_absolute_threshold}
\title{Identify urban boundaries by applying an absolute threshold}
\usage{
apply_absolute_threshold(
  grid,
  threshold,
  operator = "greater_than",
  smoothing = TRUE
)
}
\arguments{
\item{grid}{SpatRaster}

\item{threshold}{numeric. The threshold value to be applied to derive urban boundaries. Be aware the threshold should be in the same unit as the grid values.}

\item{operator}{character. Operator used to enforce the threshold. Either 'greater_than', 'greater_or_equal', 'smaller_than', 'smaller_or_equal' or 'equals'.}

\item{smoothing}{logical. Whether to smooth the edges of the boundaries. If \code{TRUE}, the the function \code{apply_majority_rule} will be employed.}
}
\value{
named list with the following elements:
\itemize{
\item \code{rboundaries}: SpatRaster in which cells that are part of an urban unit have a value of '1'
\item \code{vboundaries}: sf object with the urban units as polygons
\item \code{threshold}: the threshold value used to construct the boundaries
}
}
\description{
TODO
}
\examples{
proxies <- load_proxies_belgium()

pop_above_1500 <- apply_absolute_threshold(proxies$pop, 1500)
terra::plot(pop_above_1500$rboundaries)

built_above_20 <- apply_absolute_threshold(proxies$built, 0.20)
terra::plot(built_above_20$rboundaries)

light_above_30 <- apply_absolute_threshold(proxies$light, 30)
terra::plot(light_above_30$rboundaries)
}
