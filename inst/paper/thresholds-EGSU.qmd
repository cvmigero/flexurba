```{r}
# read test data sets

library(dplyr)
library(devtools)
library(testthat)

load_all()

pop2 <- terra::rast(here::here('test-develop/pop.tif')) %>% 
  terra::crop(terra::ext(2112800, 3822400, 989750, 3880000))

built2 <- terra::rast(here::here('test-develop/built.tif')) %>% 
  terra::crop(terra::ext(2112800, 3822400, 989750, 3880000))
built2 <- built2/1000000

lights2 <- terra::rast(here::here('test-develop/lights.tif')) %>% 
  terra::crop(terra::ext(2112800, 3822400, 989750, 3880000))


countries <- sf::st_read(here::here("inst/paper/countries2.geojson"), quiet = TRUE)
countries2 <- countries %>%
  dplyr::filter(CNTR_ID %in% c('EG', 'SD'))

country_grid <- terra::rasterize(terra::vect(countries2), pop2, 'CNTR_ID')

pop2 <- mask(pop2, country_grid)
built2 <- mask(built2, country_grid)
lights2 <- mask(lights2, country_grid)
```

**To construct the plot**

```{r}

library(sf)
library(terra)
library(ggplot2)
library(shadowtext)
library(ggspatial)
library(ggpubr)
library(tidyterra)

# load countries and cities
countries <- sf::st_read(here::here("inst/paper/countries2.geojson"), quiet = TRUE)
cities <- sf::st_read(here::here("inst/paper/cities3.geojson"), quiet = TRUE)

# create labels of cities, and offset the position
labels <- cities
st_geometry(labels) <- st_sfc(
  ifelse(labels$city_ascii %in% c("Alexandria"),
    st_sfc(st_geometry(labels) - st_sfc(st_point(c(300000, 0)))),
    ifelse(labels$city_ascii %in% c("Cairo"),
      st_sfc(st_geometry(labels) - st_sfc(st_point(c(170000, 0)))),
      st_sfc(st_geometry(labels) - st_sfc(st_point(c(-12000, -100000))))
    )
  ),
  crs = st_crs(labels$geometry)
)

color <- c('#d53d3d','#2970c2','#a17900', 'grey55')


create_plot <- function(layer, color, title, bel=TRUE){
  
  
  if (bel){
    x <- 485000
    y <- 6030000
    city <- cities %>% filter(country == "BE")
    lab <- labels %>% filter(country == "BE")
  } else {
    x <- 530000
    y <- 6270000
    city <- cities
    lab <- labels
  }
  
  ggplot() + 
   tidyterra::geom_spatraster(data = 
                             layer, aes(fill=which), maxcell=5000000) +
  scale_fill_gradient(
    low=color,
    high=color,
    na.value = "NA",
    guide = 'none'
  ) + geom_sf(
    data = countries,
    fill = NA,
    colour = "#2F2F2F"
  ) +
  geom_sf(
    data = city,
    color = "#2F2F2F",
    size = 0.8
  ) +
  geom_shadowtext(
    data = lab, aes(
      x = st_coordinates(geometry)[, 1],
      y = st_coordinates(geometry)[, 2],
      label = city_ascii
    ),
    bg.color = "white", color = "black", size = 2.5
  ) +
  xlim(2100000, 3844000) +
  ylim(980000, 3900000) +
  labs(title=title) +
  theme_void() +
  ggspatial::annotation_scale(
    pad_x = grid::unit(0.37, "npc"),
    pad_y = grid::unit(0.03, "npc"),
    width_hint = 0.10,
    height = grid::unit(0.05, "cm"),
    bar_cols = c("black")
  ) +
  theme(
    plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"),
    title = element_text(size=7)
  ) 
}
```

**Construct plot**

```{r}
t1 <- apply_absolute_threshold(pop2, 2000)

t2 <- apply_absolute_threshold(built2, 0.10)

t3 <- apply_absolute_threshold(lights2, 15)


t4 <- apply_relative_threshold(pop2, 'p99', country_grid)

t5 <- apply_relative_threshold(built2, 'p99', country_grid)

t6 <- apply_relative_threshold(lights2, 'p99', country_grid)
```

```{r}
p1 <- create_plot(t1, color[1], '(A) Population > 2000 inhab./km²', FALSE)

p2 <- create_plot(t2, color[2], '(B) Built-up fraction > 10%', FALSE)

p3 <- create_plot(t3, color[3],'(C) Light intensity > 15 nW/cm²/sr',  FALSE)


p4 <- create_plot(t4, color[1], '(D) Population > 99th percentile\nper country', FALSE)

p5 <- create_plot(t5, color[2], '(E) Built-up fraction > 99th percentile\nper country', FALSE)

p6 <- create_plot(t6, color[3],'(F) Light intensity > 99th percentile\nper country',  FALSE)

p <- ggarrange(p1, p2, p3, p4, p5, p6, nrow=2, ncol=3)
```

```{r}
ggsave(here::here('inst/paper/figure-gisruk2025.png'), p, width=6.5, height=6.5)
```

**Statistics for the abstract:**

```{r}
terra::zonal(pop2, country_grid, function(x) {quantile(x, probs=0.99, na.rm = TRUE)
                                              })
```

```{r}
terra::zonal(built2, country_grid, function(x) {quantile(x, probs=0.99, na.rm = TRUE)
                                              })
```

```{r}
terra::zonal(lights2, country_grid, function(x) {quantile(x, probs=0.99, na.rm = TRUE)
                                              })
```
